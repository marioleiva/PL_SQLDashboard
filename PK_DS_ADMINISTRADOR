
CREATE OR REPLACE PACKAGE BODY CHSP.PK_DS_ADMINISTRADOR
AS
PROCEDURE SP_ADM_USUARIOS(
    P_ID NUMBER,
    P_USUARIO VARCHAR2,
    P_PASSWORD VARCHAR2,
    P_NOMBRES VARCHAR2,
    P_APELLIDOS VARCHAR2,
    P_CORREO VARCHAR2,
    P_ID_USUARIO NUMBER,
    P_RETORNO OUT CONJUNTO
)
IS 
V_ID NUMBER(9) := 0;
BEGIN
   SELECT COUNT(ID) INTO V_ID FROM CHSP.TB_DS_USUARIOS WHERE USUARIO = P_USUARIO AND ROWNUM=1;
    IF (V_ID = 0 ) THEN
        SELECT CHSP.SQ_DS_USUARIO.nextval INTO V_ID FROM DUAL;
        INSERT INTO CHSP.TB_DS_USUARIOS  (ID,USUARIO,PASSWORD) VALUES (V_ID, P_USUARIO, P_USUARIO);
        COMMIT;  
    ELSE 
        SELECT TO_NUMBER(ID) INTO  V_ID FROM CHSP.TB_DS_USUARIOS WHERE USUARIO = P_USUARIO AND ROWNUM=1;
    END IF;

    UPDATE CHSP.TB_DS_USUARIOS SET NOMBRES = UPPER(P_NOMBRES), APELLIDOS= UPPER(P_APELLIDOS), STATUS=1, CORREO = P_CORREO,
    PASSWORD = (CASE WHEN LENGTH(P_PASSWORD) > 3 THEN P_PASSWORD ELSE PASSWORD END) WHERE ID = V_ID;
    COMMIT;
    OPEN P_RETORNO FOR SELECT V_ID ID, 'CORRECTO' RESULTADO FROM DUAL;
END;

PROCEDURE SP_VER_USUARIO(
    P_ID NUMBER,
    P_ACCES_TOKEN VARCHAR2,
    P_RETORNO OUT CONJUNTO
)
IS 
V_ID NUMBER(9) := 0;
BEGIN                                   --      SELECT *  FROM   CHSP.TB_DS_USUARIOS WHERE STATUS=1 
SELECT COUNT(ID) INTO V_ID FROM CHSP.TB_DS_USUARIOS WHERE USUARIO = P_ID AND ROWNUM=1;
    IF (V_ID > 0 ) THEN
         SELECT TO_NUMBER(ID) INTO  V_ID FROM CHSP.TB_DS_USUARIOS WHERE USUARIO = P_ID AND ROWNUM=1;
    END IF;
    OPEN P_RETORNO FOR
    SELECT V_ID ID   FROM  DUAL;
END;

PROCEDURE SP_ELI_USUARIOS(
    P_ID NUMBER,
    P_RETORNO OUT CONJUNTO
)
IS 
BEGIN
UPDATE CHSP.TB_DS_USUARIOS  SET STATUS=0 WHERE ID = P_ID;
OPEN P_RETORNO FOR SELECT P_ID ID, 'CORRECTO' RESULTADO FROM DUAL;
END;

PROCEDURE SP_VAL_USUARIOS(
    P_USUARIO VARCHAR2,
    P_PASSWORD VARCHAR2,
    P_RETORNO OUT CONJUNTO
)
IS
V_ID NUMBER(9) := 0;
V_NOMBRES VARCHAR2(200) := 'NO ENCONTRADO';
V_APELLIDOS VARCHAR2(200)  := 'NO ENCONTRADO';
V_CORREO VARCHAR2(200)  := 'NO TIENE';
V_RESULTADO VARCHAR2(100);
BEGIN
 SELECT COUNT(ID) INTO V_ID FROM CHSP.TB_DS_USUARIOS  WHERE USUARIO = P_USUARIO AND PASSWORD=P_PASSWORD AND STATUS=1 AND ROWNUM=1;
    IF (V_ID > 0 ) THEN
        SELECT ID, NOMBRES, APELLIDOS, CORREO INTO V_ID, V_NOMBRES, V_APELLIDOS, V_CORREO FROM CHSP.TB_DS_USUARIOS 
        WHERE USUARIO = P_USUARIO AND PASSWORD=P_PASSWORD AND STATUS=1 AND ROWNUM=1;
        V_RESULTADO := 'CORRECTO';
    ELSE
        V_RESULTADO := 'INCORRECTO';
    END IF;
    OPEN P_RETORNO FOR     SELECT V_ID ID, V_NOMBRES NOMBRES, V_APELLIDOS APELLIDOS,V_RESULTADO RESULTADO, V_CORREO CORREO FROM DUAL;
END;


PROCEDURE SP_LIS_USUARIOS(
P_ID NUMBER,
P_RETORNO OUT CONJUNTO
)
IS
BEGIN                                   --      SELECT * FROM   CHSP.TB_DS_USUARIOS WHERE STATUS=1 AND ID_SEDE > 0
    OPEN P_RETORNO FOR
    
    SELECT ID, USUARIO, NOMBRES, APELLIDOS , FECHA, (TO_CHAR(USUARIO) || ' ' || NOMBRES || ' ' || APELLIDOS) TITULO, CORREO FROM CHSP.TB_DS_USUARIOS U INNER JOIN (
    SELECT COUNT(RU.ID) CANTIDAD,  RU.ID_USUARIO FROM  CHSP.TB_DS_ROLES_USUARIOS RU INNER JOIN CHSP.TB_DS_ROLES R ON RU.ID_ROL = R.ID 
    WHERE R.ID_SEDE= P_ID AND RU.STATUS=1 AND R.STATUS=1 GROUP BY RU.ID_USUARIO) DATA ON DATA.ID_USUARIO = U.ID WHERE U.STATUS=1 ORDER BY U.ID;

END;

PROCEDURE SP_LIS_ROLESxUSUARIO(
    P_ID NUMBER,
    P_USUARIO VARCHAR2,
    P_RETORNO OUT CONJUNTO
)
IS
BEGIN                                               --  SELECT * FROM CHSP.TB_DS_ROLES_USUARIOS  WHERE STATUS = 1 AND ID_USUARIO=1         
    OPEN P_RETORNO FOR
    SELECT   RU.ID ID, RU.ID_ROL ID_ROL, R.TITULO, S.ID ID_SEDE, S.TITULO SEDE, TRUNC(RU.FECHA) FECHA   FROM  CHSP.TB_DS_ROLES_USUARIOS RU 
    INNER JOIN CHSP.TB_DS_ROLES R ON RU.ID_ROL = R.ID 
    INNER JOIN CHSP.TB_DS_SEDES S ON R.ID_SEDE = S.ID 
    WHERE RU.ID_USUARIO = P_ID AND RU.STATUS= 1 AND R.STATUS=1 ORDER BY R.ID;
END;

PROCEDURE SP_ADD_ROLESxUSUARIO(
    P_ID NUMBER,
    P_ID_ROL NUMBER,
    P_ID_USUARIO NUMBER,
    P_RETORNO OUT CONJUNTO
)
IS 
V_ID NUMBER(9) := 0;
BEGIN
SELECT COUNT(ID) INTO V_ID FROM CHSP.TB_DS_ROLES_USUARIOS WHERE ID_ROL = P_ID_ROL AND ID_USUARIO = P_ID AND STATUS= 1 AND ROWNUM=1;
    IF (V_ID = 0 ) THEN
        SELECT CHSP.SQ_DS_ROLES_USUARIOS.nextval INTO V_ID FROM DUAL;
        INSERT INTO CHSP.TB_DS_ROLES_USUARIOS  (ID, ID_ROL, ID_USUARIO) VALUES (V_ID, P_ID_ROL, P_ID);
        COMMIT;  
    END IF;
OPEN P_RETORNO FOR          SELECT V_ID ID, 'CORRECTO' RESULTADO FROM DUAL;
END;

PROCEDURE SP_ELI_ROLESxUSUARIO(
    P_ID NUMBER,
    P_ID_USUARIO NUMBER,
    P_RETORNO OUT CONJUNTO
)
IS 
BEGIN
    IF (P_ID > 0 ) THEN
        UPDATE CHSP.TB_DS_ROLES_USUARIOS SET STATUS=0 WHERE ID = P_ID;
    END IF;
OPEN P_RETORNO FOR          SELECT P_ID ID, 'CORRECTO' RESULTADO FROM DUAL;
END;


PROCEDURE SP_LIS_MODULOSxUSUARIO(
    P_ID NUMBER,    --  ID_ROL
    P_USUARIO VARCHAR2,
    P_RETORNO OUT CONJUNTO
)
IS
BEGIN
    OPEN P_RETORNO FOR
    SELECT RM.ID ID, MO.TITULO, MO.ICONO, MO.PAGINA, MO.FECHA, RM.ORDEN FROM   CHSP.TB_DS_ROLES_MODULOS RM INNER JOIN CHSP.TB_DS_MODULOS MO ON RM.ID_MODULO = MO.ID 
    WHERE RM.ID_ROL = P_ID AND RM.STATUS= 1 AND MO.STATUS=1  ORDER BY  RM.ORDEN,MO.ID ; 
END;

PROCEDURE SP_LIS_ROLES(
P_ID NUMBER,
P_RETORNO OUT CONJUNTO
)
IS
BEGIN
    OPEN P_RETORNO FOR
    SELECT ID, TITULO, TRUNC(FECHA) FECHA, ID_SEDE FROM CHSP.TB_DS_ROLES WHERE STATUS=1 AND ID_SEDE = P_ID ORDER BY ID;
END;

PROCEDURE SP_ADM_ROLES(
    P_ID NUMBER,
    P_TITULO VARCHAR2,
    P_ID_SEDE NUMBER,
    P_ID_USUARIO NUMBER,
    P_RETORNO OUT CONJUNTO
)
IS 
V_ID NUMBER(9) := P_ID;
BEGIN
    IF (P_ID = 0 ) THEN
        SELECT CHSP.SQ_DS_ROLES.nextval INTO V_ID FROM DUAL;
        INSERT INTO CHSP.TB_DS_ROLES  (ID, ID_SEDE,TITULO) VALUES (V_ID, P_ID_SEDE, P_TITULO);
        COMMIT;  
    END IF;

    UPDATE CHSP.TB_DS_ROLES SET TITULO = UPPER(P_TITULO), ID_USUARIO = P_ID_USUARIO, FECHA = SYSDATE   WHERE ID = V_ID;
    COMMIT;
    OPEN P_RETORNO FOR SELECT V_ID ID, 'CORRECTO' RESULTADO FROM DUAL;
END;

PROCEDURE SP_ELI_ROLES(
    P_ID NUMBER,
    P_ID_USUARIO NUMBER,
    P_RETORNO OUT CONJUNTO
)
IS 
BEGIN
    IF (P_ID > 0 ) THEN
        UPDATE CHSP.TB_DS_ROLES SET STATUS=0 WHERE ID = P_ID;
    END IF;
OPEN P_RETORNO FOR          SELECT P_ID ID, 'CORRECTO' RESULTADO FROM DUAL;
END;

PROCEDURE SP_LIS_MODULOS(
    P_ID NUMBER,
    P_RETORNO OUT CONJUNTO
)
IS
BEGIN
    OPEN P_RETORNO FOR
    SELECT ID, TITULO, ICONO, PAGINA, FECHA FROM CHSP.TB_DS_MODULOS WHERE STATUS= 1 ORDER BY ID;
END;

PROCEDURE SP_ADM_MODULOS(
    P_ID NUMBER,
    P_TITULO VARCHAR2,
    P_ICONO VARCHAR2,
    P_PAGINA VARCHAR2,
    P_ID_USUARIO NUMBER,
    P_RETORNO OUT CONJUNTO
)
IS 
V_ID NUMBER(9) := P_ID;
BEGIN
    IF (P_ID = 0 ) THEN
        SELECT CHSP.SQ_DS_MODULOS.nextval INTO V_ID FROM DUAL;
        INSERT INTO CHSP.TB_DS_MODULOS  (ID, TITULO) VALUES (V_ID, P_TITULO);                   -- SELECT * FROM CHSP.TB_DS_MODULOS
        COMMIT;  
    END IF;

    UPDATE CHSP.TB_DS_MODULOS SET TITULO = UPPER(P_TITULO), ICONO=P_ICONO, PAGINA=P_PAGINA, ID_USUARIO = P_ID_USUARIO, FECHA = SYSDATE   WHERE ID = V_ID;
    COMMIT;
    OPEN P_RETORNO FOR SELECT V_ID ID, 'CORRECTO' RESULTADO FROM DUAL;
END;

PROCEDURE SP_ELI_MODULOS(
    P_ID NUMBER,
    P_ID_USUARIO NUMBER,
    P_RETORNO OUT CONJUNTO
)
IS 
BEGIN
    IF (P_ID > 0 ) THEN
        UPDATE CHSP.TB_DS_MODULOS SET STATUS=0 WHERE ID = P_ID;
    END IF;
OPEN P_RETORNO FOR          SELECT P_ID ID, 'CORRECTO' RESULTADO FROM DUAL;
END;

PROCEDURE SP_ADD_MODULOSxROL(
    P_ID NUMBER,
    P_ID_ROL NUMBER,
    P_ORDEN NUMBER,
    P_ID_USUARIO NUMBER,
    P_RETORNO OUT CONJUNTO
)
IS 
V_ID NUMBER(9) := 0;
BEGIN       --  SELECT * FROM  CHSP.TB_DS_ROLES_MODULOS WHERE STATUS=1 AND ID_USUARIO=1  --ID_ROL = 3
SELECT COUNT(ID) INTO V_ID FROM  CHSP.TB_DS_ROLES_MODULOS WHERE ID_ROL = P_ID_ROL AND ID_MODULO = P_ID AND STATUS= 1 AND ROWNUM=1;
    IF (V_ID = 0 ) THEN
        SELECT CHSP.SQ_DS_ROLES_MODULOS.nextval INTO V_ID FROM DUAL;
        INSERT INTO CHSP.TB_DS_ROLES_MODULOS  (ID, ID_ROL, ID_MODULO, ORDEN, ID_USUARIO) VALUES (V_ID, P_ID_ROL, P_ID, P_ORDEN, P_ID_USUARIO);
        COMMIT;  
    END IF;
OPEN P_RETORNO FOR          SELECT V_ID ID, 'CORRECTO' RESULTADO FROM DUAL;
END;

PROCEDURE SP_ELI_MODULOSxROL(
    P_ID NUMBER,
    P_ID_USUARIO NUMBER,
    P_RETORNO OUT CONJUNTO
)
IS 
BEGIN
    IF (P_ID > 0 ) THEN
        UPDATE  CHSP.TB_DS_ROLES_MODULOS SET STATUS=0 WHERE ID = P_ID;
    END IF;
OPEN P_RETORNO FOR          SELECT P_ID ID, 'CORRECTO' RESULTADO FROM DUAL;
END;

PROCEDURE SP_LIS_GRUPOS(
    P_ID NUMBER,
    P_RETORNO OUT CONJUNTO
)
IS
BEGIN
    OPEN P_RETORNO FOR
    SELECT ID, TITULO, ID_USUARIO, STATUS, FECHA, STATUS ACCIONES FROM CHSP.TB_DS_GRUPOS WHERE STATUS> 0 ORDER BY ID;
END;

PROCEDURE SP_ADM_GRUPOS(
    P_ID NUMBER,
    P_TITULO VARCHAR2,
    P_ESTADO NUMBER,
    P_ID_SEDE NUMBER,
    P_ID_USUARIO NUMBER,
    P_RETORNO OUT CONJUNTO
)
IS 
V_ID NUMBER(9) := P_ID;
BEGIN
    IF (P_ID = 0 ) THEN
        SELECT CHSP.SQ_DS_GRUPOS.nextval INTO V_ID FROM DUAL;
        INSERT INTO CHSP.TB_DS_GRUPOS  (ID, TITULO, ID_USUARIO) VALUES (V_ID, P_TITULO,P_ID_USUARIO);                   -- SELECT * FROM CHSP.TB_DS_GRUPOS
        COMMIT;  
    END IF;

    IF (P_ESTADO=0) THEN
        UPDATE CHSP.TB_DS_GRUPOS SET STATUS= P_ESTADO, ID_USUARIO = P_ID_USUARIO, FECHA = SYSDATE   WHERE ID = V_ID;
        COMMIT;
    ELSE
        UPDATE CHSP.TB_DS_GRUPOS SET TITULO = UPPER(P_TITULO), ID_USUARIO = P_ID_USUARIO, STATUS= P_ESTADO, ID_SEDE = P_ID_SEDE, FECHA = SYSDATE   WHERE ID = V_ID;
        COMMIT;
    END IF; 
    OPEN P_RETORNO FOR SELECT V_ID ID, 'CORRECTO' RESULTADO FROM DUAL;
END;

PROCEDURE SP_ADD_GRUPOSxUSUARIO(
    P_ID NUMBER,
    P_ID_GRUPO NUMBER,
    P_ID_USUARIO NUMBER,
    P_RETORNO OUT CONJUNTO
)
IS 
V_ID NUMBER(9) := 0;
BEGIN       --  SELECT * FROM   CHSP.TB_DS_GRUPOS_USUARIOS
SELECT COUNT(ID) INTO V_ID FROM   CHSP.TB_DS_GRUPOS_USUARIOS WHERE ID_USUARIO = P_ID AND ID_GRUPO = P_ID_GRUPO AND STATUS= 1 AND ROWNUM=1;
    IF (V_ID = 0 ) THEN
        SELECT CHSP.SQ_DS_GRUPOS_USUARIOS.nextval INTO V_ID FROM DUAL;
        INSERT INTO CHSP.TB_DS_GRUPOS_USUARIOS  (ID, ID_GRUPO, ID_USUARIO) VALUES (V_ID, P_ID_GRUPO, P_ID);
        COMMIT;  
    END IF;
OPEN P_RETORNO FOR          SELECT V_ID ID, 'CORRECTO' RESULTADO FROM DUAL;
END;

PROCEDURE SP_ELI_GRUPOSxUSUARIO(
    P_ID NUMBER,
    P_ID_USUARIO NUMBER,
    P_RETORNO OUT CONJUNTO
)
IS 
BEGIN
    IF (P_ID > 0 ) THEN
        UPDATE  CHSP.TB_DS_GRUPOS_USUARIOS SET STATUS=0 WHERE ID = P_ID;
    END IF;
OPEN P_RETORNO FOR          SELECT P_ID ID, 'CORRECTO' RESULTADO FROM DUAL;
END;

PROCEDURE SP_LIS_GRUPOSxUSUARIO(
    P_ID NUMBER,
    P_ID_USUARIO NUMBER,
    P_ID_SEDE NUMBER,
    P_ACCES_TOKEN VARCHAR2,
    P_RETORNO OUT CONJUNTO
)
IS
BEGIN
    OPEN P_RETORNO FOR      -- SELECT * FROM CHSP.TB_DS_GRUPOS_USUARIOS
    --SELECT RM.ID ID, MO.TITULO, MO.ICONO, MO.PAGINA FROM   CHSP.TB_DS_GRUPOS_USUARIOS RM INNER JOIN CHSP.TB_DS_MODULOS MO ON RM.ID_MODULO = MO.ID 
    --WHERE RM.ID_ROL = P_ID AND RM.STATUS= 1 AND MO.STATUS=1;
    
    SELECT GU.ID ID, G.TITULO, GU.FECHA  FROM CHSP.TB_DS_GRUPOS_USUARIOS GU INNER JOIN CHSP.TB_DS_GRUPOS G ON GU.ID_GRUPO = G.ID 
    WHERE GU.ID_USUARIO= P_ID AND GU.STATUS=1 AND G.STATUS=1 ORDER BY G.ID;
END;

PROCEDURE SP_ADD_QUEUExGRUPO(
    P_ID NUMBER,
    P_ID_CARGA NUMBER,
    P_TITULO VARCHAR2,
    P_ID_SEDE NUMBER,
    P_ID_GRUPO NUMBER,
    P_ID_USUARIO NUMBER,
    P_STATUS NUMBER,
    P_MENSAJE VARCHAR2,
    P_RETORNO OUT NUMBER 
)
IS 
V_ID NUMBER(9) := 0;
BEGIN       --  SELECT * FROM   CHSP.TB_DS_QUEUELIST ORDER BY ID
SELECT COUNT(ID) INTO V_ID FROM CHSP.TB_DS_QUEUELIST WHERE  ID_SEDE = P_ID_SEDE AND ID_GRUPO = P_ID_GRUPO AND ID_SOURCE = P_ID  AND STATUS = 1 AND ROWNUM=1;
    IF (V_ID = 0 ) THEN
        SELECT CHSP.SQ_DS_QUEUELIST.nextval INTO V_ID FROM DUAL;
        INSERT INTO CHSP.TB_DS_QUEUELIST (ID, ID_SEDE, ID_GRUPO, ID_SOURCE, TITULO, MENSAJE, ID_CARGA) VALUES (V_ID, P_ID_SEDE, P_ID_GRUPO, P_ID, P_TITULO, P_MENSAJE, P_ID_CARGA);
        COMMIT;  
    END IF;
    P_RETORNO :=V_ID;   
END;

PROCEDURE SP_LIS_QUEUExGRUPO(
    P_ID NUMBER,
    P_ID_GRUPO NUMBER,
    P_ID_USUARIO NUMBER,
    P_ID_SEDE NUMBER,
    P_RETORNO OUT CONJUNTO
)
IS
BEGIN
    OPEN P_RETORNO FOR
            SELECT DATA.ID, DATA.TITULO, DATA.RESULTADO, CASE WHEN DATA.STATUS= 1 THEN 'PENDIENTE' WHEN DATA.STATUS= 2 THEN 'PROCESO' WHEN DATA.STATUS= 3 THEN 'TERMINADO' ELSE '' END  ACCIONES, DATA.FECHA
            FROM
            (SELECT LISTA.ID, LISTA.TITULO TITULO, GRUPO.TITULO RESULTADO, 
             CASE WHEN LISTA.STATUS= 2 THEN (CASE WHEN LISTA.ID_USUARIO = P_ID_USUARIO THEN 2 ELSE 0 END) ELSE 1 END  STATUS, 'Fecha Reg.: '||TO_CHAR(LISTA.FECHA_REG,'YYYY-MM-DD HH24:MI' )||'   Ult. Fecha: '||TO_CHAR(LISTA.FECHA_GES,'YYYY-MM-DD HH24:MI' )||'   Fecha Agenda: '||TO_CHAR(LISTA.FECHA_AGE, 'YYYY-MM-DD HH24:MI' )  FECHA
            FROM CHSP.TB_DS_GRUPOS GRUPO INNER JOIN CHSP.TB_DS_GRUPOS_USUARIOS GR_US ON GRUPO.ID = GR_US.ID_GRUPO
            INNER JOIN CHSP.TB_DS_QUEUELIST LISTA ON GRUPO.ID = LISTA.ID_GRUPO  
            WHERE    LISTA.ID_SEDE = P_ID_SEDE  AND  GR_US.ID_USUARIO = P_ID_USUARIO AND GRUPO.STATUS = 1 AND GR_US.STATUS = 1  AND  LISTA.STATUS < 3) DATA WHERE DATA.STATUS > 0;
            
END;

PROCEDURE SP_INI_QUEUExGRUPO(
    P_ID NUMBER,
    P_ID_USUARIO NUMBER,
    P_ID_SEDE NUMBER,
    P_RETORNO OUT CONJUNTO                                  
)
IS                                                                                                  --      SELECT * FROM CHSP.TB_DS_QUEUELIST   ORDER BY ID       update CHSP.TB_DS_QUEUELIST set FECHA_AGE= TO_DATE('2022/01/01 00:00',  'YYYY-MM-DD HH24:MI')  WHERE FECHA_AGE IS NULL AND STATUS BETWEEN 1 AND 2                                     ALTER TABLE CHSP.TB_DS_QUEUELIST ADD FECHA_AGE DATE
V_CANT NUMBER(9) := 0;
V_ID NUMBER(9) := 0;
V_ID_SOURCE NUMBER(9) := 0;
V_ID_GRUPO NUMBER(9) := 0;
V_MENSAJE VARCHAR(2500) := 'NINGUNO';
BEGIN
        SELECT COUNT(LI.ID) INTO V_CANT FROM CHSP.TB_DS_QUEUELIST LI INNER JOIN CHSP.TB_DS_GRUPOS GRU ON LI.ID_GRUPO=GRU.ID        
        WHERE  LI.ID_SEDE = P_ID_SEDE AND LI.ID_USUARIO = P_ID_USUARIO AND GRU.STATUS=1 AND LI.STATUS = 2 AND LI.FECHA_AGE < SYSDATE AND ROWNUM=1 ORDER BY LI.ID;
        IF (V_CANT>0) THEN
            SELECT TO_NUMBER(LI.ID),  TO_NUMBER(LI.ID_SOURCE), TO_NUMBER(LI.ID_GRUPO), MENSAJE  INTO  V_ID, V_ID_SOURCE, V_ID_GRUPO, V_MENSAJE  FROM CHSP.TB_DS_QUEUELIST LI 
            INNER JOIN CHSP.TB_DS_GRUPOS GRU ON LI.ID_GRUPO=GRU.ID        
            WHERE  LI.ID_SEDE = P_ID_SEDE AND LI.ID_USUARIO = P_ID_USUARIO AND GRU.STATUS=1 AND LI.STATUS = 2 AND LI.FECHA_AGE < SYSDATE AND ROWNUM=1 ORDER BY LI.FECHA_AGE, LI.ID;
            UPDATE CHSP.TB_DS_QUEUELIST SET STATUS = 2, ID_USUARIO = P_ID_USUARIO, FECHA = SYSDATE  WHERE ID = V_ID;-- AND STATUS=1;
         ELSE   
            SELECT COUNT(LI.ID) INTO V_CANT  FROM CHSP.TB_DS_QUEUELIST LI INNER JOIN CHSP.TB_DS_GRUPOS GRU ON LI.ID_GRUPO=GRU.ID        
            WHERE  LI.ID_SEDE = P_ID_SEDE AND LI.ID_USUARIO = P_ID_USUARIO AND GRU.STATUS=1 AND LI.STATUS = 1 AND FECHA_AGE < SYSDATE AND ROWNUM=1 ORDER BY LI.ID;
            
             IF (V_CANT>0) THEN
                SELECT TO_NUMBER(LI.ID),  TO_NUMBER(LI.ID_SOURCE), TO_NUMBER(LI.ID_GRUPO), MENSAJE  INTO  V_ID, V_ID_SOURCE, V_ID_GRUPO, V_MENSAJE  FROM CHSP.TB_DS_QUEUELIST LI 
                INNER JOIN CHSP.TB_DS_GRUPOS GRU ON LI.ID_GRUPO=GRU.ID        
                WHERE  LI.ID_SEDE = P_ID_SEDE AND LI.ID_USUARIO = P_ID_USUARIO AND GRU.STATUS=1 AND LI.STATUS = 1 AND FECHA_AGE < SYSDATE AND ROWNUM=1 ORDER BY LI.FECHA_AGE, LI.ID;
                UPDATE CHSP.TB_DS_QUEUELIST SET STATUS = 2, ID_USUARIO = P_ID_USUARIO, FECHA = SYSDATE  WHERE ID = V_ID;-- AND STATUS=1;
             ELSE 
                SELECT COUNT(LI.ID) INTO V_CANT  FROM CHSP.TB_DS_QUEUELIST LI   INNER JOIN CHSP.TB_DS_GRUPOS GRU ON LI.ID_GRUPO = GRU.ID    
                INNER JOIN CHSP.TB_DS_GRUPOS_USUARIOS GR_US ON GRU.ID = GR_US.ID_GRUPO 
                WHERE  LI.ID_SEDE = P_ID_SEDE AND GR_US.ID_USUARIO = P_ID_USUARIO AND LI.STATUS = 1 AND GRU.STATUS=1 AND GR_US.STATUS=1  AND ROWNUM=1 ORDER BY LI.ID;
                
                 IF (V_CANT>0) THEN
                    SELECT TO_NUMBER(LI.ID),  TO_NUMBER(LI.ID_SOURCE), TO_NUMBER(LI.ID_GRUPO), MENSAJE  INTO  V_ID, V_ID_SOURCE, V_ID_GRUPO, V_MENSAJE  FROM CHSP.TB_DS_QUEUELIST LI  
                    INNER JOIN CHSP.TB_DS_GRUPOS GRU ON LI.ID_GRUPO = GRU.ID    
                    INNER JOIN CHSP.TB_DS_GRUPOS_USUARIOS GR_US ON GRU.ID = GR_US.ID_GRUPO 
                    WHERE  LI.ID_SEDE = P_ID_SEDE AND GR_US.ID_USUARIO = P_ID_USUARIO AND LI.STATUS = 1 AND GRU.STATUS=1 AND GR_US.STATUS=1  AND ROWNUM=1 ORDER BY LI.ID;
                    UPDATE CHSP.TB_DS_QUEUELIST SET STATUS = 2, ID_USUARIO = P_ID_USUARIO, FECHA = SYSDATE  WHERE ID = V_ID;-- AND STATUS=1;
                 END IF;
             END IF;
        END IF;
        
        OPEN P_RETORNO FOR          --      SELECT * FROM  CHSP.TB_DS_QUEUELIST        UPDATE  CHSP.TB_DS_QUEUELIST SET STATUS= 1 , FECHA = NULL, FECHA_GES =NULL, ID_USUARIO=NULL WHERE ID=49                  SELECT * FROM CHSP.TB_DS_GRUPOS_USUARIOS WHERE STATUS=1 AND ID_USUARIO>0
        SELECT V_ID  ID, V_ID_SOURCE ID_SOURCE, V_ID_GRUPO ID_GRUPO, V_MENSAJE PLANTILLA  FROM DUAL;   
END;

PROCEDURE SP_LIS_QUEUExARCHIVOS(
    P_ID NUMBER,
    P_ID_GRUPO NUMBER,
    P_ID_USUARIO NUMBER,
    P_ID_SEDE NUMBER,
    P_RETORNO OUT CONJUNTO
)
IS
BEGIN
    OPEN P_RETORNO FOR
            SELECT DATA.ID, DATA.TITULO, DATA.RESULTADO, CASE WHEN DATA.STATUS= 1 THEN 'PENDIENTE' WHEN DATA.STATUS= 2 THEN 'PROCESO' WHEN DATA.STATUS= 3 THEN 'TERMINADO' ELSE '' END  ACCIONES, DATA.FECHA
            FROM
            (SELECT LISTA.ID, LISTA.TITULO TITULO, GRUPO.TITULO RESULTADO, CASE WHEN LISTA.STATUS= 2 THEN (CASE WHEN LISTA.ID_USUARIO= 1 THEN 2 ELSE 0 END) ELSE 1 END  STATUS,
            LISTA.FECHA_REG FECHA
            FROM CHSP.TB_DS_GRUPOS GRUPO INNER JOIN CHSP.TB_DS_GRUPOS_USUARIOS GR_US ON GRUPO.ID = GR_US.ID_GRUPO
            INNER JOIN CHSP.TB_DS_QUEUELIST LISTA ON GRUPO.ID = LISTA.ID_GRUPO  
            WHERE    LISTA.ID_SEDE = P_ID_SEDE  AND  GR_US.ID_USUARIO = P_ID_USUARIO AND GRUPO.STATUS = 1 AND GR_US.STATUS = 1  AND  LISTA.STATUS < 3) DATA WHERE DATA.STATUS >0;
            
END;

PROCEDURE SP_ADM_QUEUExGRUPO(
    P_ID NUMBER,   
    P_ID_SOURCE NUMBER,
    P_TITULO VARCHAR2,
    P_ID_SEDE NUMBER,
    P_ID_GRUPO NUMBER,
    P_ID_USUARIO NUMBER,
    P_STATUS NUMBER,
    P_MENSAJE VARCHAR2,
    P_RETORNO OUT CONJUNTO
)
IS 
V_ID NUMBER(9) := 0;
BEGIN       --  SELECT * FROM   CHSP.TB_DS_QUEUELIST  WHERE STATUS>0  ORDER BY  ID;               
IF (P_STATUS = 2 OR P_STATUS = 3) THEN
    SELECT COUNT(ID) INTO V_ID FROM   CHSP.TB_DS_QUEUELIST WHERE ID = P_ID AND STATUS = 2 AND ROWNUM=1;
    IF (V_ID > 0 ) THEN
        UPDATE CHSP.TB_DS_QUEUELIST SET STATUS = P_STATUS, FECHA_GES = SYSDATE  WHERE ID = P_ID;
        COMMIT;  
    END IF;
END IF;

IF (P_STATUS = 4) THEN   -- REINICIAR
    SELECT COUNT(ID) INTO V_ID FROM   CHSP.TB_DS_QUEUELIST WHERE ID = P_ID AND STATUS = 3 AND ROWNUM=1;
    IF (V_ID > 0 ) THEN
        SELECT CHSP.SQ_DS_QUEUELIST.nextval INTO V_ID FROM DUAL;
        INSERT INTO CHSP.TB_DS_QUEUELIST (ID, ID_SEDE, ID_GRUPO, ID_SOURCE, ID_USUARIO, FECHA_REG, FECHA, STATUS, TITULO, MENSAJE, ID_CARGA) 
        SELECT V_ID, ID_SEDE, ID_GRUPO, ID_SOURCE, ID_USUARIO,SYSDATE, NULL, 2, TITULO, MENSAJE, ID_CARGA FROM CHSP.TB_DS_QUEUELIST WHERE ID = P_ID ;
        
        UPDATE CHSP.TB_DS_QUEUELIST SET STATUS = P_STATUS, FECHA_GES = SYSDATE WHERE ID = P_ID;
        COMMIT;  
    END IF;
END IF;

IF (P_STATUS = 5) THEN   -- CAMBIAR
    SELECT COUNT(ID) INTO V_ID FROM   CHSP.TB_DS_QUEUELIST WHERE ID = P_ID AND (STATUS BETWEEN 1 AND 3) AND ROWNUM=1;
    IF (V_ID > 0 ) THEN
        SELECT CHSP.SQ_DS_QUEUELIST.nextval INTO V_ID FROM DUAL;
        INSERT INTO CHSP.TB_DS_QUEUELIST (ID, ID_SEDE, ID_GRUPO, ID_SOURCE, ID_USUARIO, FECHA_REG, FECHA, STATUS, TITULO, MENSAJE, ID_CARGA) 
        SELECT V_ID, ID_SEDE, ID_GRUPO, ID_SOURCE, P_ID_USUARIO,SYSDATE, NULL, 2, TITULO, MENSAJE, ID_CARGA FROM CHSP.TB_DS_QUEUELIST WHERE ID= P_ID ;
        
        UPDATE CHSP.TB_DS_QUEUELIST SET STATUS = P_STATUS, FECHA_GES = SYSDATE WHERE ID = P_ID;
        COMMIT;  
    END IF;
END IF;    --  UPDATE CHSP.TB_DS_QUEUELIST SET STATUS = 2, FECHA_AGE = TO_DATE('2022/07/08 11:24',  'YYYY-MM-DD HH24:MI')  WHERE ID = 116;

IF (P_STATUS = 6) THEN   -- AGENDAR
    SELECT COUNT(ID) INTO V_ID FROM   CHSP.TB_DS_QUEUELIST WHERE ID = P_ID AND (STATUS BETWEEN 1 AND 2) AND ROWNUM=1;
    IF (V_ID > 0 ) THEN
       -- P_TITULO := REPLACE (P_TITULO, '-','/');
        UPDATE CHSP.TB_DS_QUEUELIST SET STATUS = 2, FECHA_GES = SYSDATE, FECHA_AGE = TO_DATE(P_TITULO,  'YYYY-MM-DD HH24:MI')  WHERE ID = P_ID;  -- ('2022/07/08 11:23',
        --UPDATE CHSP.TB_DS_QUEUELIST SET STATUS = 2, FECHA_AGE = P_TITULO   WHERE ID = P_ID;
        COMMIT;  
    END IF;
END IF;

OPEN P_RETORNO FOR          
SELECT V_ID ID, 'CORRECTO' RESULTADO FROM DUAL;

END;

PROCEDURE SP_LIS_QUEUExGRUPO_CARGA(
    P_ID NUMBER,
    P_ID_GRUPO NUMBER,
    P_ID_USUARIO NUMBER,
    P_ID_SEDE NUMBER,
    P_RETORNO OUT CONJUNTO
)
IS 
V_ID NUMBER(9) := 0;            -- SELECT * FROM CHSP.TB_DS_GRUPOS_CARGAS ;                   SELECT * FROM  CHSP.TB_DS_QUEUELIST  WHERE STATUS >1 ORDER BY ID 
BEGIN
    OPEN P_RETORNO FOR
            SELECT DATA.ID, DATA.TITULO , TO_CHAR( DATA.FECHA, 'DD-MM-YYYY' ) FECHA, SUM(DATA.STATUS) ACCIONES, DATA.PLANTILLA RESULTADO, 'SISTEMA' USUARIO FROM (
            SELECT GC.ID, GC.TITULO, TRUNC(GC.FECHA) AS FECHA, CASE WHEN LISTA.STATUS <3 THEN 1 ELSE 0  END STATUS, G.TITULO PLANTILLA  FROM CHSP.TB_DS_GRUPOS_CARGAS GC 
            INNER JOIN CHSP.TB_DS_QUEUELIST LISTA ON GC.ID = LISTA.ID_CARGA INNER JOIN CHSP.TB_DS_GRUPOS G ON G.ID = LISTA.ID_GRUPO
            WHERE GC.ID_SEDE = P_ID_SEDE AND LISTA.STATUS BETWEEN 1 AND 3  ) DATA GROUP BY DATA.ID, DATA.TITULO, TO_CHAR( DATA.FECHA, 'DD-MM-YYYY' ), DATA.PLANTILLA ORDER BY DATA.ID DESC;  
END;

PROCEDURE SP_LIS_QUEUExGRUPO_DETALLE(
    P_ID NUMBER,
    P_ID_GRUPO NUMBER,
    P_ID_USUARIO NUMBER,
    P_ID_SEDE NUMBER,
    P_RETORNO OUT CONJUNTO
)
IS 
V_ID NUMBER(9) := 0;            -- SELECT * FROM CHSP.TB_DS_GRUPOS_CARGAS ;                   SELECT * FROM  CHSP.TB_DS_QUEUELIST   ORDER BY ID      SELECT * FROM   CHSP.TB_DS_USUARIOS
BEGIN
    OPEN P_RETORNO FOR
    SELECT L.ID, L.TITULO, CASE WHEN L.STATUS = '1' THEN 'PENDIENTE' WHEN L.STATUS= '2' THEN 'PROCESO' WHEN L.STATUS='3' THEN 'TERMINADO' WHEN L.STATUS='0' THEN 'ELIMINADO' ELSE '' END RESULTADO, 
   TO_CHAR( L.FECHA, 'YYYY-MM-DD HH24:MI' )  FECHA, L.ID_USUARIO, (U.APELLIDOS||'_'||U.NOMBRES) USUARIO, L.ID_GRUPO  FROM  CHSP.TB_DS_QUEUELIST L 
    LEFT JOIN CHSP.TB_DS_USUARIOS U ON L.ID_USUARIO = U.ID
    WHERE L.ID_CARGA =  P_ID AND (L.STATUS BETWEEN 0 AND 3) ORDER BY L.ID ;  
END;

PROCEDURE SP_LIS_QUEUExGRUPO_SUPER(
    P_ID NUMBER,
    P_ID_GRUPO NUMBER,
    P_ID_USUARIO NUMBER,
    P_ID_SEDE NUMBER,
    P_RETORNO OUT CONJUNTO
)
IS 
V_ID NUMBER(9) := 0;            -- SELECT * FROM CHSP.TB_DS_GRUPOS_CARGAS ;                   SELECT * FROM  CHSP.TB_DS_QUEUELIST ORDER BY ID 
BEGIN
    OPEN P_RETORNO FOR
            SELECT DATA.ID, DATA.TITULO, DATA.RESULTADO, CASE WHEN DATA.STATUS= 1 THEN 'PENDIENTE' WHEN DATA.STATUS= 2 THEN 'PROCESO' WHEN DATA.STATUS= 3 THEN 'TERMINADO' ELSE '' END  ACCIONES, 
            TO_CHAR( DATA.FECHA, 'YYYY-MM-DD' )  FECHA, DATA.ID_USUARIO, (U.APELLIDOS||'_'||U.NOMBRES) USUARIO  
            FROM (      SELECT LISTA.ID, LISTA.TITULO TITULO, GRUPO.TITULO RESULTADO,  LISTA.STATUS  STATUS, LISTA.FECHA_REG FECHA, LISTA.ID_USUARIO ID_USUARIO
            FROM CHSP.TB_DS_GRUPOS GRUPO 
            INNER JOIN CHSP.TB_DS_QUEUELIST LISTA  ON GRUPO.ID =LISTA.ID_GRUPO INNER JOIN CHSP.TB_DS_GRUPOS_USUARIOS GR_US ON LISTA.ID_GRUPO = GR_US.ID_GRUPO
            WHERE  LISTA.ID_SEDE = P_ID_SEDE AND GR_US.ID_USUARIO = P_ID_USUARIO    AND GRUPO.STATUS = 1 AND GR_US.STATUS = 1 AND LISTA.STATUS BETWEEN 1 AND 3  ) DATA 
            LEFT JOIN CHSP.TB_DS_USUARIOS U ON DATA.ID_USUARIO = U.ID  WHERE DATA.STATUS >0 ;
END;

PROCEDURE SP_LIS_USUARIOSxGRUPO(
    P_ID NUMBER,
    P_RETORNO OUT CONJUNTO
)
IS 
V_ID_GRUPO NUMBER(9) := 0;            -- SELECT * FROM CHSP.TB_DS_GRUPOS_CARGAS ;                   SELECT * FROM  CHSP.TB_DS_QUEUELIST WHERE ID_CARGA > 1 AND ID_SEDE=1  AND ID_CARGA=54 ORDER BY ID               SELECT * FROM CHSP.TB_DS_GRUPOS_USUARIOS WHERE STATUS=1
BEGIN
    OPEN P_RETORNO FOR
            SELECT U.ID, U.ID ID_USUARIO, (U.APELLIDOS||' '||U.NOMBRES) USUARIO FROM CHSP.TB_DS_GRUPOS_USUARIOS GR_US INNER JOIN CHSP.TB_DS_USUARIOS U ON GR_US.ID_USUARIO = U.ID 
            WHERE U.STATUS=1 AND GR_US.STATUS=1 AND GR_US.ID_GRUPO = P_ID;
END;

PROCEDURE SP_LIS_USUARIOSxCARGA_T(
    P_ID NUMBER,
    P_ID_SEDE NUMBER,
    P_RETORNO OUT CONJUNTO
)
IS 
--V_ID_GRUPO NUMBER(9) := 0;            -- SELECT * FROM CHSP.TB_DS_GRUPOS_CARGAS ;                   SELECT * FROM  CHSP.TB_DS_QUEUELIST WHERE ID_CARGA > 1 AND ID_SEDE=1  AND ID_CARGA=54 ORDER BY ID               SELECT * FROM CHSP.TB_DS_GRUPOS_USUARIOS WHERE STATUS=1
BEGIN
    OPEN P_RETORNO FOR
    --SELECT ID, TRUNC(FECHA) FECHA FROM CHSP.TB_DS_QUEUELIST
    --WHERE  ID_SEDE = P_ID_SEDE AND ID_USUARIO = P_ID AND TRUNC(FECHA) >=  (TRUNC(SYSDATE) - 7) AND STATUS = 3 ;
    
    SELECT ID, FECHA FROM (
    SELECT COUNT(ID) ID, TO_CHAR( FECHA, 'YYYY-MM-DD' ) FECHA FROM CHSP.TB_DS_QUEUELIST
    WHERE  ID_SEDE = P_ID_SEDE AND ID_USUARIO = P_ID AND TRUNC(FECHA) >=  (TRUNC(SYSDATE) - 7) AND STATUS = 3  GROUP BY  TO_CHAR( FECHA, 'YYYY-MM-DD' )  ) DATA ORDER BY DATA.FECHA   ;
END;


END;
/
